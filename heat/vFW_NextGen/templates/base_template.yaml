##########################################################################
#
#==================LICENSE_START==========================================
#
#
# Copyright (c) 2018 AT&T Intellectual Property. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#==================LICENSE_END============================================
#
# ECOMP is a trademark and service mark of AT&T Intellectual Property.
#
##########################################################################

heat_template_version: 2013-05-23

description: Heat template that deploys a private network for ONAP VNFs

##############
#            #
# PARAMETERS #
#            #
##############

parameters:
  int_unprotected_private_net_id:
    type: string
    label: Unprotected private network name or ID
    description: Private network that connects vPacketGenerator with vFirewall
  int_unprotected_private_subnet_id:
    type: string
    label: Unprotected private subnetwork name or ID
    description: Private subnetwork of the protected network
  unprotected_private_net_cidr:
    type: string
    label: Unprotected private network CIDR
    description: The CIDR of the unprotected private network
  int_protected_private_net_id:
    type: string
    label: Protected private network name or ID
    description: Private network that connects vFirewall with vSink
  int_protected_private_subnet_id:
    type: string
    label: Protected private subnetwork name or ID
    description: Private subnetwork of the unprotected network
  protected_private_net_cidr:
    type: string
    label: Protected private network CIDR
    description: The CIDR of the protected private network
  key_name:
    type: string
    label: Key pair name
    description: Public/Private key pair name
  pub_key:
    type: string
    label: Public key
    description: Public key to be installed on the compute instance
  vnf_name:
    type: string
    description: VNF_NAME

#############
#           #
# RESOURCES #
#           #
#############

resources:
  my_keypair:
    type: OS::Nova::KeyPair
    properties:
      name:
        str_replace:
          template: vnfname_keyname
          params:
            vnfname: { get_param: vnf_name }
            keyname: { get_param: key_name }
      public_key: { get_param: pub_key }
      save_private_key: false

  int_unprotected_private_network:
    type: OS::Neutron::Net
    properties:
      name:
        str_replace:
          template: vnfname_unprotectednetname
          params:
            vnfname: { get_param: vnf_name }
            unprotectednetname: { get_param: int_unprotected_private_net_id }

  int_unprotected_private_subnet:
    type: OS::Neutron::Subnet
    properties:
      name:
        str_replace:
          template: vnfname_unprotectedsubnetname
          params:
            vnfname: { get_param: vnf_name }
            unprotectedsubnetname: { get_param: int_unprotected_private_subnet_id }
      network: { get_resource: int_unprotected_private_network }
      cidr: { get_param: unprotected_private_net_cidr }

  int_protected_private_network:
    type: OS::Neutron::Net
    properties:
      name:
        str_replace:
          template: vnfname_protectednetname
          params:
            vnfname: { get_param: vnf_name }
            protectednetname: { get_param: int_protected_private_net_id }

  int_protected_private_subnet:
    type: OS::Neutron::Subnet
    properties:
      name:
        str_replace:
          template: vnfname_protectedsubnetname
          params:
            vnfname: { get_param: vnf_name }
            protectedsubnetname: { get_param: int_protected_private_subnet_id }
      network: { get_resource: int_protected_private_network }
      cidr: { get_param: protected_private_net_cidr }

outputs:
  int_unprotected_private_net_id:
    value: { get_resource: int_unprotected_private_network }
  int_unprotected_private_subnet_id:
    value: { get_resource: int_unprotected_private_subnet }
  int_protected_private_net_id:
    value: { get_resource: int_protected_private_network }
  int_protected_private_subnet_id:
    value: { get_resource: int_protected_private_subnet }
  key_name:
    value: { get_resource: my_keypair }

